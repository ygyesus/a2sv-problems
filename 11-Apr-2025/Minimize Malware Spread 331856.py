# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:    
        n = len(graph)
        
        def dfs(node):
            infected.add(node)
            for neighbor in range(n):
                if neighbor in infected or graph[node][neighbor] == 0:
                    continue
                dfs(neighbor)

        infected = set()
        for node in initial:
            dfs(node)

        totalInitial = len(infected)
        initial.sort()

        minIndex = float('inf')
        minInfected = float('inf')
        
        for removed in initial:
            infected = set()
            for node in initial:
                if node == removed:
                    continue
                dfs(node)

            if len(infected) < minInfected:
                minInfected = len(infected)
                minIndex = removed
            

        return minIndex


            

                


        


